{"id":83653,"xmlId":"Lombook Plugin","name":"Lombok","description":"<h1>IntelliJ Lombok plugin</h1>\n<br>\n<a href=\"https://github.com/mplushnikov/lombok-intellij-plugin\">GitHub</a> |\n<a href=\"https://github.com/mplushnikov/lombok-intellij-plugin/issues\">Issues</a> | Donate (\n<a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=3F9HXD7A2SMCN\">PayPal</a> )\n<br>\n<br>\n\n<b>A plugin that adds first-class support for Project Lombok</b>\n<br>\n<br>\n\n<b>Sponsors</b>\n<br>\n<a href=\"https://sponsorlink.codestream.com/?utm_source=jbmarket&amp;utm_campaign=lombok&amp;utm_medium=banner\">\n  <img src=\"https://alt-images.codestream.com/codestream_logo_lombok.png\" alt=\"Codestream\"></a>\n<br>\nDiscussing code is now as easy as highlighting a block and typing a comment right from your IDE. Take the pain out of code reviews and improve code quality.\n<a href=\"https://sponsorlink.codestream.com/?utm_source=jbmarket&amp;utm_campaign=lombok&amp;utm_medium=banner\">Try it free!</a>\n<br>\n<br>\n<b>Features</b>\n<ul>\n  <li><a href=\"https://projectlombok.org/features/GetterSetter.html\">@Getter and @Setter</a></li>\n  <li><a href=\"https://projectlombok.org/features/experimental/FieldNameConstants\">@FieldNameConstants</a></li>\n  <li><a href=\"https://projectlombok.org/features/ToString.html\">@ToString</a></li>\n  <li><a href=\"https://projectlombok.org/features/EqualsAndHashCode.html\">@EqualsAndHashCode</a></li>\n  <li><a href=\"https://projectlombok.org/features/Constructor.html\">@AllArgsConstructor, @RequiredArgsConstructor and\n    @NoArgsConstructor</a></li>\n  <li><a href=\"https://projectlombok.org/features/Log.html\">@Log, @Log4j, @Log4j2, @Slf4j, @XSlf4j, @CommonsLog,\n    @JBossLog, @Flogger, @CustomLog</a></li>\n  <li><a href=\"https://projectlombok.org/features/Data.html\">@Data</a></li>\n  <li><a href=\"https://projectlombok.org/features/Builder.html\">@Builder</a></li>\n  <li><a href=\"https://projectlombok.org/features/experimental/SuperBuilder\">@SuperBuilder</a></li>\n  <li><a href=\"https://projectlombok.org/features/Builder.html#singular\">@Singular</a></li>\n  <li><a href=\"https://projectlombok.org/features/Delegate.html\">@Delegate</a></li>\n  <li><a href=\"https://projectlombok.org/features/Value.html\">@Value</a></li>\n  <li><a href=\"https://projectlombok.org/features/experimental/Accessors.html\">@Accessors</a></li>\n  <li><a href=\"https://projectlombok.org/features/experimental/Wither.html\">@Wither</a></li>\n  <li><a href=\"https://projectlombok.org/features/With.html\">@With</a></li>\n  <li><a href=\"https://projectlombok.org/features/SneakyThrows.html\">@SneakyThrows</a></li>\n  <li><a href=\"https://projectlombok.org/features/val.html\">@val</a></li>\n  <li><a href=\"https://projectlombok.org/features/var.html\">@var</a></li>\n  <li><a href=\"https://projectlombok.org/features/experimental/var.html\">experimental @var</a></li>\n  <li><a href=\"https://projectlombok.org/features/experimental/UtilityClass.html\">@UtilityClass</a></li>\n  <li><a href=\"https://projectlombok.org/features/configuration.html\">Lombok config system</a></li>\n  <li>Code inspections</li>\n  <li>Refactoring actions (lombok and delombok)</li>\n</ul>\n<br>\n","tags":["Tools integration"],"vendor":"Michail\n    Plushnikov","version":"0.30-2020.1","notes":"<ul>\n  <li>0.30\n    <ol>\n      <li>\n        Provided new release build for IntelliJ 2020.1\n      </li>\n    </ol>\n  </li>\n  <li>0.29\n    <ol>\n      <li>Added link for simply annotation processing activation into warning message box, thanks to @wyhasany (Michał\n        Rowicki)\n      </li>\n      <li>Added new inspection for redundant class and field modifiers for @Value annotated classes, thanks to @wyhasany\n        (Michał Rowicki)\n      </li>\n      <li>Fixed #740: Builder.build() method throws exceptions from wrong constructor</li>\n      <li>Fixed #735: FieldDefaults processing should check for @UtilityClass annotation, thanks to @Sheigutn (Florian\n        Böhm)\n      </li>\n      <li>Fixed #724: @Accessors with prefix can break with numbers, thanks to @Lekanich (Aleksandr Zhelezniak)</li>\n      <li>Fixed #719: Add support for new setterPrefix for Builder enhancement, thanks to @ocadaruma (Okada Haruki)</li>\n      <li>Fixed #680: Add support for lombok.builder.className config property, thanks to @tagae (Sebastián González)\n      </li>\n    </ol>\n  </li>\n  <li>0.28\n    <ol>\n      <li>Fixed #394: New feature request: Add SneakyThrows QuickFix, thanks to @Lekanich (Aleksandr Zhelezniak)</li>\n      <li>Fixed #440: NPE inspection false positive with lazy getters, thanks to @Lekanich (Aleksandr Zhelezniak)</li>\n      <li>Fixed #633: @Builder.Default causes a warning message, thanks to @Lekanich (Aleksandr Zhelezniak)</li>\n      <li>Fixed #672: Add support for @CustomLog, thanks to @juriad (Adam Juraszek)</li>\n      <li>Fixed #687: Support static constructors using already-defined private constructors, thanks to @vanam (Martin\n        Váňa)\n      </li>\n    </ol>\n  </li>\n  <li>0.27\n    <ol>\n      <li>Fixed #513: Add support for @SuperBuilder</li>\n      <li>Fixed #629: Add support for lombok.fieldNameConstants.uppercase = true from lombok 1.18.8</li>\n      <li>Fixed #630: Add support for suppress generation of the builder method when using @Builder from lombok 1.18.8\n      </li>\n      <li>Fixed #631: Add support for change the access modifier of generated builder classes from lombok 1.18.8</li>\n      <li>Fixed #526: StackOverflow with LombokLightParameterListBuilder.equals</li>\n      <li>Fixed #660: Performance problems in autocomplete/code analysis</li>\n      <li>Fixed #663: Method with varArgs gives an error in IntelliJ</li>\n      <li>Fixed #670: Non-idempotent computation issue with @Delegate usages</li>\n      <li>Fixed #673: Add support for @With</li>\n    </ol>\n  </li>\n  <li>0.26.2 IntelliJ-2019.2\n    <ol>\n      <li>Compatibility issues with IntelliJ 2019.2</li>\n      <li>Fixed #637: Non-idempotent computation in Intellij 2019.2</li>\n      <li>Fixed #648: IDEA 2019.2 highlights builder() method invocation as an error</li>\n    </ol>\n  </li>\n  <li>0.25\n    <ol>\n      <li>Fixed #406: Added delombok support for @UtilityClass</li>\n      <li>Fixed #522: Added configuration option to disable annotation processing warning</li>\n      <li>Fixed #580: '@ConstructorProperties' in Delomboked code</li>\n      <li>Fixed #590: Delombok class with @Value doesn't produce private final fields</li>\n      <li>Fixed #613: NullPointerException on AccessLevel enum when IDE window open</li>\n      <li>Fixed #617: Can't add new 'Java Postfix Completion shortcut'</li>\n      <li>Fixed #619: Added fallback support for old @FieldNameConstants behavior</li>\n      <li>Allow renaming lombok generated methods -&gt; substitute it with renaming of root elements</li>\n    </ol>\n  </li>\n  <li>0.24\n    <ol>\n      <li>Fixed #353: Support for fieldDefaults in lombok.config</li>\n      <li>Fixed #547: Updated support for FieldNameConstants</li>\n      <li>Fixed #560: ProcessCanceledException when opening project</li>\n      <li>Fixed #577: 'SIMPLE_BAD_CHARACTER' error thrown during IntelliJ startup</li>\n      <li>Fixed #583: IntelliJ 2019.1 EAP: Plugin not supported</li>\n      <li>Fixed #584: AccessLevel not being respected for staticConstructorMethod by @All/@RequiredArgsConstructor</li>\n      <li>Fixed #593: Constructor body context is not set properly</li>\n    </ol>\n  </li>\n  <li>0.23\n    <ol>\n      <li>Fixed #296: val does not resolve correct type for initializer with generic diamond</li>\n      <li>Fixed #437: Wrong compile error when using AllArgsConstructor.staticName</li>\n      <li>Fixed #556: Support for IDEA-2018.3</li>\n      <li>Dropped support of deprecated lombok annotations: lombok.experimental.Value and lombok.experimental.Builder;\n        Use lombok.Value and lombok.Builder instead\n      </li>\n    </ol>\n  </li>\n  <li>0.22\n    <ol>\n      <li>Performance improvements #516: Editor UI freezes when editing a particular class</li>\n      <li>Fixed #504: Added Support for Delombok of @EqualsAndHashcode and @ToString Exclude/Include annotations</li>\n      <li>Fixed #507: @Value and @FieldDefaults should skip static fields</li>\n      <li>Fixed #472: Lombok should not interfer with java 10 'var'</li>\n      <li>Fixed #530: Remove explicit type argument leads to error</li>\n      <li>Fixed #531: Inspection for Lombok annotations incorrectly highlights 'var'</li>\n      <li>Better Support for @Cleanup: 'AutoCloseableResource'-Inspection can handle @Cleanup correctly in IntelliJ</li>\n    </ol>\n  </li>\n  <li>0.21\n    <ol>\n      <li>Fixed Regression #533: StackOverflowError with PsiFieldImpl.isDeprecated</li>\n      <li>Removed obsolete support for hrisey</li>\n    </ol>\n  </li>\n  <li>0.20\n    <ol>\n      <li>Fixed #119: IDEA doesn't rename builder method when field is renamed</li>\n      <li>Fixed #144: Find usages on field should find usages of builder/wither methods</li>\n      <li>Fixed #186: Find usages doesn't work (for example Accessors with Setter/Getter)</li>\n      <li>Fixed #295: Refactor Rename misses @Builder methods</li>\n      <li>Fixed #450: @Builder doesn't mark generated builder 'setters' as @Deprecated if the source field is\n        deprecated\n      </li>\n      <li>Fixed #497: Lombok plugin breaks creating Intellij IDEA postfix expressions</li>\n      <li>Fixed #499: @Builder does not respect @Accessors on fields</li>\n    </ol>\n  </li>\n  <li>0.19\n    <ol>\n      <li>Fixed #475: Added support for @FieldNameConstants</li>\n      <li>Fixed #488: Added support for @Flogger annotation</li>\n      <li>Fixed #490: Added support for lombok.noArgsConstructor.extraPrivate</li>\n      <li>Fixed #473: Warning about Wither requiring AllArgsConstructor, although Builder provides one</li>\n      <li>Fixed #382: Added support for @XXX(onMethod_, onParam_, onConstructor_) for JDK8</li>\n    </ol>\n  </li>\n  <li>0.18\n    <ol>\n      <li>Fixed #481: Fix plugin compatibility with IntelliJ 2018.2 EAP</li>\n    </ol>\n  </li>\n  <li>0.17\n    <ol>\n      <li>Fixed #375: Added support for @Builder.Default</li>\n      <li>Fixed #465: Fix plugin compatibility with IntelliJ 2018.1</li>\n    </ol>\n  </li>\n  <li>0.16\n    <ol>\n      <li>Fixed #210: Changing log annotation requires restart of Intellij to work</li>\n      <li>Fixed #270: Compile errors after moving an @Setter annotation by using IntelliJ move keyboard shortcut ⌥⇧↑\n      </li>\n      <li>Fixed #365: [Feature request]IDEA .var suffix feature replacement</li>\n      <li>Fixed #379: StackOverflowException occurs sporadically when plugin enabled</li>\n      <li>Fixed #419: Stackoverflow in Intellij because of recursive delegation in @Delegate</li>\n      <li>Fixed #426: PSI equals shouldn't perform resolve</li>\n      <li>Fixed #427: Exception thrown when using *Find Usages* with ideavim</li>\n    </ol>\n  </li>\n  <li>0.15.17.2\n    <ol>\n      <li>Fixed #415: Plugin Error: Lombok Plugin threw an uncaught NoClassDefFoundError</li>\n    </ol>\n  </li>\n  <li>0.15\n    <ol>\n      <li>Fixed #134: Add suppot for toBuilder = true</li>\n      <li>Fixed #145: Overriding builder() method for @Builder shows false compilation error</li>\n      <li>Fixed #162: @Data/@XConstructor bug with default constructor</li>\n      <li>Improved #260: Handling val - Inferred Type is Object</li>\n      <li>Fixed #290: Getter and FieldDefaults with parameter AccessLevel in Enum shows \"cannot access\"</li>\n      <li>Fixed #337: Component name collision: 'UpdateComponent'</li>\n      <li>Fixed #339: Delombok for @ToString should use simpleName for class</li>\n      <li>Fixed #342: @EqualsAndHashCode/@ToString should treat explicit \"of = {}\" differently</li>\n      <li>Fixed #359: Explicit type can be diamond inspection is overloaded with the same id</li>\n      <li>Fixed #367: @Data on parent and child should be marked as compilation error</li>\n      <li>Fixed #393: @Builder with @Singular map produces duplicated variables</li>\n      <li>Fixed #399: IndexNotReadyException in FieldFindUsagesHandler</li>\n      <li>Fixed #412: @Accessors(fluent = true) does not impact @Wither but the plugin assumes it does</li>\n    </ol>\n  </li>\n  <li>0.14\n    <ol>\n      <li>Fixed #209: Fixed @EqualsAndHashCode unnecessary warning</li>\n      <li>Fixed #212: Fixed Inspection \"Field may be 'final'\" triggers in spite of @Setter</li>\n      <li>Fixed #253: Fixed Refactor \"Default @Getter\" removes annotation on JPA entity classes</li>\n      <li>Fixed #302: Changed linked text in \"Lombok Requires Annotation Processing\" notification</li>\n      <li>Fixed #304: Fixed @FieldDefaults`s access level 'PUBLIC' doesn't work</li>\n      <li>Fixed #306: Problem with @Builder and generics</li>\n      <li>Fixed #308: Write access is allowed from write-safe contexts only</li>\n      <li>Fixed #313: Missed substitution when class and builder have generics</li>\n      <li>Fixed #320: Fixed No availability to generate any constructor</li>\n      <li>Fixed #322: Added support of lombok.experimental.var</li>\n      <li>Fixed #332: @Value(staticConstructor = \"of\") breaks intellij's type inference</li>\n      <li>Fixed #334: Added support for inlining getters/setters</li>\n    </ol>\n  </li>\n  <li>0.13\n    <ol>\n      <li>Fixed #226: @Setter(AccessLevel.NONE) triggers error and not just warning on final fields</li>\n      <li>Fixed #254: Properties from lombok.config does not involve on suggestion list</li>\n      <li>Fixed #259: Support JBoss Logging (new in Lombok 1.16.10)</li>\n      <li>Fixed #262: When lombok.accessors.chain=true setters show void return value</li>\n      <li>Fixed #268: Lombok Dependency is possible outdated' message even when 'Enable lombok version warning' is\n        unchecked.\n      </li>\n    </ol>\n  </li>\n  <li>0.12\n    <ol>\n      <li>Added support for transparent changing of visibility of existing fields and variables for IntelliJ 2016.2</li>\n      <li>Fixed #56: Missing auto-generated modifiers on fields and class shown in the \"Structure\" window when using\n        `@Value`\n      </li>\n      <li>Fixed #137: Private visibility added by @Value not respected by IDE.</li>\n      <li>Fixed #143: Support UtilityClass</li>\n      <li>Fixed #147: @FieldDefaults(makeFinal = true) and bitwise operators produce an error message</li>\n      <li>Fixed #158: val causes intellij to show an invalid error when used alongside an anonymous class</li>\n      <li>Fixed #202: @Builder supports setter for final field (@Value)</li>\n      <li>Fixed #230: @Value / @EqualsAndHashCode callSuper false warning: lombok.config ignored</li>\n    </ol>\n  </li>\n  <li>0.11\n    <ol>\n      <li>Fixed #153: Configuration keys</li>\n      <li>Fixed #125: Support for lombok.getter.noIsPrefix</li>\n      <li>Fixed #128: Support @Slf4j with custom logger name</li>\n    </ol>\n  </li>\n  <li>0.10\n    <ol>\n      <li>Overall significant performance optimizations</li>\n      <li>Fixed #88: Delegating to class with generics using @Delegate annotation</li>\n      <li>Fixed #136: \"Cannot infer arguments\" with @RequiredArgsConstructor</li>\n      <li>Fixed #157: Intellij fails to infer type for constructor defined with @RequiredArgsConstructor</li>\n      <li>Fixed #176: Unchecked warning when using static constructor for @Data and @Value on parametrized class</li>\n      <li>Fixed #180: Low performance of @Builder analysis</li>\n      <li>Fixed #184: Linter suggests to add @EqualsAndHashCode to declare callSuper, but already overriden</li>\n      <li>Fixed #105: val sometimes fails to be parsed correctly</li>\n      <li>Fixed #142: IDE highlights val as an error if it had reparsed code before the line was completed</li>\n      <li>Fixed #168: val does not work with generic method calls as the initializer expression</li>\n      <li>Fixed #180: Low performance of @Builder analysis</li>\n      <li>Fixed #183: val can not work when method has Generic return</li>\n    </ol>\n  </li>\n  <li>0.9.8\n    <ol>\n      <li>Fixed #151: Builder issues with Accessors</li>\n      <li>Fixed #153: IntelliJ produces warning when specifying generic type on val declaration</li>\n      <li>Fixed #156: Exception in @Singular handling</li>\n      <li>Fixed #165: Can't correctly resolve multiple @Builder methods in same class having partial implementations\n      </li>\n      <li>Fixed #172: \"Lombok needs a default constructor in the base class\" error in enum</li>\n      <li>Fixed #175: Added support for @Tolerate for @Getter and @Setter</li>\n      <li>Fixed #177: Null pointer in intellij version 15.0.3</li>\n    </ol>\n  </li>\n  <li>0.9.7\n    <ol>\n      <li>Added caching of produced PsiElements to reduce probability of recursive invocation #112,#123, #126, #129</li>\n      <li>Fixed #130: @XArgsConstructor don't show error when used on a subclass that requires non-empty super call</li>\n      <li>Fixed #132: Make @EqualsAndHashCode(callSuper = true) default</li>\n      <li>Fixed #135: Added support for @NoArgsConstructor(force = true)</li>\n      <li>Fixed #149: Idea cannot generate another constructor when @NoArgsConstructor is used</li>\n    </ol>\n  </li>\n  <li>0.9.6\n    <ol>\n      <li>Fixed #47: Feature request: support onX annotations via @__</li>\n      <li>Fixed #77: Support new @Singular annotation for @Builder collection fields</li>\n      <li>Fixed #123: SpinAllocator has exhausted! Too many threads or you're going to get StackOverflow</li>\n    </ol>\n  </li>\n  <li>0.9.5\n    <ol>\n      <li>Fixed #48: Importing @Builder generated builder classes does not work</li>\n      <li>Added #77: Basic Support for new @Singular annotation for @Builder collection fields</li>\n      <li>Fixed #111: @Builder on constructors/methods is not recognized in Android Studio</li>\n      <li>Fixed #116: @Builder - Builder class can't be found without a static import</li>\n      <li>Added Hrisey @Parcelable support patch</li>\n      <li>Dropped outdated support for some lombok_pg annotations</li>\n    </ol>\n  </li>\n  <li>0.9.4\n    <ol>\n      <li>Fixed regression #108: Getter/Setter wrong after last Update</li>\n      <li>Fixed #100, #72: AssertionError: Stub and PSI element type mismatch</li>\n    </ol>\n  </li>\n  <li>0.9.3\n    <ol>\n      <li>Fixed #95: Fluent Setter Override Error</li>\n      <li>Fixed #96: @Value and @Wither not playing well together</li>\n      <li>Fixed #97: Two constructors being shown when using @Builder and @AllArgsConstructor together</li>\n      <li>Fixed #98: Plugin crash: IndexNotReadyException val processing</li>\n      <li>Fixed #101: @SneakyThrows causes incorrect errors in IntelliJ 14</li>\n    </ol>\n  </li>\n  <li>0.9.2\n    <ol>\n      <li>Added #9: Basic val support in IntelliJ 14.1</li>\n      <li>Fixed #81: @Builder: buildMethod should have same throws-list as annotated static method</li>\n      <li>Fixed #82: Abstract Class + @Delegate</li>\n      <li>Fixed #83: Getting inconvertible types error assigning new builder instance</li>\n      <li>Fixed #84: Properly find usages of @Getters &amp; @Setters on fields with @Acccessor prefixes</li>\n      <li>Fixed #90: Renaming a field with different case doesn't rename getter</li>\n      <li>Fixed #92: Improved @Wither support</li>\n      <li>Fixed #93: IntelliJ unable to resolve constructor when using @Builder and @Value together</li>\n    </ol>\n  </li>\n  <li>0.9.1\n    <ol>\n      <li>Fixed #33: Builder annotation with partial implementation shows errors</li>\n      <li>Fixed #78: Support for constructors of @Value objects with assigned final fields</li>\n      <li>Fixed #79: Support for multiple @Builder in same java class</li>\n      <li>Fixed #80: Some issues with \"delomboked\" @Builder on static method</li>\n    </ol>\n  </li>\n  <li>0.9.0\n    <ol>\n      <li>Added Delombok Feature for @Builder</li>\n      <li>Issue #53: Basic Support for Lombok configuration keys</li>\n      <li>Fixed #57: Incorrect constructors appear in \"Structure\" when `@Value` and `@Builder`</li>\n      <li>Fixed #70: Conflict resolution failed on renaming field together with its accessors in IntelliJ 14</li>\n      <li>Issue #74: Fixed (only IntelliJ 14+) Sneaky Throws Not Correctly Detected for Anonymous Inner Class</li>\n      <li>Issue #75: Added support for @lombok.Builder (lombok version 1.16)</li>\n    </ol>\n  </li>\n  <li>0.8.9\n    <ol>\n      <li>Fixed #67: Updates and Improvements for IntelliJ 14, fixed incompatibility</li>\n    </ol>\n  </li>\n  <li>0.8.8\n    <ol>\n      <li>Fixed #52 : Invalid stub element type in index</li>\n      <li>Fixed #54 : @Wither copies @Nullable annotation to generated method</li>\n      <li>Fixed #62 : Intellij shows error on Lazy Getter</li>\n      <li>Fixed #63 : Added support for @Tolerate (together with @Value, @Data)</li>\n      <li>Fixed issue 109(on GoogleCode): Intellij freezes regularly when the lombok plugin is enabled</li>\n      <li>Fixed issue 106(on GoogleCode): Static methods annotated with @Builder are not recognized</li>\n      <li>Updated to lombok changes: canEqual (of @EqualsAndHashCode fame) should be protected instead of public.</li>\n      <li>Basic autocompletion and highlighting for lombok.config files</li>\n    </ol>\n  </li>\n  <li>0.8.7\n    <ol>\n      <li>Fixed issue 104(on GoogleCode): Intellij reports unused field with @Getter and @Setter</li>\n      <li>Fixed #50 : @SneakyThrows does not work for try-with-resource statements</li>\n      <li>Fixed #51 : Delegate annotation moved to experimental</li>\n      <li>Fixed #58 : NoSuchMethodError in IntelliJ 14 EAP</li>\n    </ol>\n  </li>\n  <li>0.8.6\n    <ol>\n      <li>Added basic refactoring actions for Lombok @Data, @ToString and @EqualsAndHashcode methods</li>\n      <li>Fixed #46 : @SneakyThrows does not work on methods which throws multiple exceptions</li>\n    </ol>\n  </li>\n  <li>0.8.5\n    <ol>\n      <li>Fixed #44 : @SneakyThrows doesn't hide exception on Intellij13</li>\n    </ol>\n  </li>\n  <li>0.8.4\n    <ol>\n      <li>Fixed #20 : Inspection of lombok annotations say I can't use @Builder on constructor</li>\n      <li>Fixed issue 92(on Googlecode) : Plugin flags @Builder annotations when they are placed on contructors</li>\n      <li>Fixed #41 : Error with @Builder</li>\n      <li>Fixed #42 : Added Extension to populate Structure view</li>\n      <li>Fixed issue 13(on GoogleCode): @SneakyThrows does not hide Unhandled Exception Error</li>\n    </ol>\n  </li>\n  <li>0.8.3\n    <ol>\n      <li>Fixed #17: Cyclic parent child relation</li>\n      <li>Fixed #34: Lombok plugin crashes</li>\n      <li>Fixed #36: Possible class cast exception</li>\n      <li>Fixed #37: Delombok of files included as library failes</li>\n    </ol>\n  </li>\n  <li>0.8.2\n    <ol>\n      <li>Added support for \"topic\" annotation value of all @Log annotations (Lombok &gt;= 1.12.6)</li>\n      <li>Added validation of static fields/methods of @Delegate annotation (@Delegate is legal only on instance fields\n        or no-argument instance methods)\n      </li>\n      <li>Fixed #19: Slf4j in static context</li>\n      <li>Fixed #29: Renaming a class with the @Log* annotation adds extra qualification to calls</li>\n      <li>Fixed #31: Prevent errors with invalid identifiers for builderClassName in @Builder annotation</li>\n      <li>Fixed #32: Refactor -&gt; Extract -&gt; Parameter Object || Change Signature broken</li>\n      <li>Fixed (on GoogleCode) #83: @Slf4j does not work when added for first time</li>\n      <li>Fixed (on GoogleCode) #100: Refactor Change Signature || Extract - Parameter Object</li>\n    </ol>\n  </li>\n  <li>0.8.1\n    <ol>\n      <li>Issue (on Git) #23: Fixed @Delegate inspection reports error</li>\n      <li>Issue (on Git) #27: Fixed @Delegate on a type parameter doesn't fail</li>\n      <li>Issue #60: Fixed @Delegate on methods is not supported now</li>\n      <li>Issue #98: Fixed Lombok Experimental Accessor Prefix does not handle non-alphanumeric prefixes</li>\n    </ol>\n  </li>\n  <li>0.8.0\n    <ol>\n      <li>Added refactoring action for Lombok @Log and friends, @Getter and @Setter methods</li>\n      <li>Added refactoring actions to Delombok @Data, @Value, @Wither, @Constructors, @Getter, @Setter,\n        @EqualsAndHashCode, @ToString and @Log annotations\n      </li>\n      <li>Fixed problem with renaming fields in class containing lombok @Getter and @Setter</li>\n      <li>Issue #94: Fixed Intellij does not correctly create the constructor with @RequiredAllConstructor for classes\n        with @Value\n      </li>\n    </ol>\n  </li>\n  <li>0.7.3\n    <ol>\n      <li>Fix IllegalArgumentException when trying to expand method names on IntelliJ 11</li>\n    </ol>\n  </li>\n  <li>0.7.2\n    <ol>\n      <li>Fix multiple stackoverflow exceptions</li>\n    </ol>\n  </li>\n  <li>0.7.1\n    <ol>\n      <li>Some performance optimizations</li>\n    </ol>\n  </li>\n  <li>0.7\n    <ol>\n      <li>Added partial support for @Value lombok annotations</li>\n      <li>Added support for @Accessors lombok experimental annotation</li>\n      <li>Added support for @Wither lombok experimental annotation</li>\n      <li>Added support for @Builder lombok experimental annotations</li>\n    </ol>\n  </li>\n  <li>0.6.5\n    <ol>\n      <li>Issue #20 Fixed Using @Delegate together with generic methods produced red underlining in the editor window\n      </li>\n      <li>Issue #29 Fixed @Delegate leads to exception in LombokLightParameter</li>\n      <li>Issue #37 and #59 Fixed @EqualsAndHashCode inspection for callSuper parameter</li>\n      <li>Issue #54 Valid code produces inspections errors - anonymous instance, partial implementation</li>\n    </ol>\n  </li>\n  <li>0.6.4\n    <ol>\n      <li>Issue #49 Deprecated fields should generate deprecated methods</li>\n    </ol>\n  </li>\n  <li>0.6.3\n    <ol>\n      <li>Issue #41 Added support for XSlf4j and Log4j2 logger</li>\n      <li>Issue #44 Fixed Getter- and Setter- method generation, when method is already there with a parameter(s)</li>\n      <li>Issue #56 Removed obsolete plugin dependencies (they have been merged into intellij core)</li>\n    </ol>\n  </li>\n  <li>0.6.2\n    <ol>\n      <li>Issue #50 Compiled with java 1.7 -&gt; Don't work under java 1.6 vms</li>\n    </ol>\n  </li>\n  <li>0.6\n    <ol>\n      <li>Issue #23 Updated to run with IntelliJ 12</li>\n      <li>Issue #42 IllegalArgumentException with Intellij 12</li>\n      <li>Issue #48 IllegalArgumentException with Intellij 12</li>\n      <li>Issue #38 Added ability to enable/disable lombok-intellij-plugin per project-configuration\n        and reduced logging-level of plugin\n      </li>\n    </ol>\n  </li>\n  <li>0.5\n    <ol>\n      <li>Issue #23 Initial support for IntelliJ 12</li>\n      <li>Issue #12 Added support for \"Singleton\" and \"EnumId\" annotations from lombok-pg</li>\n      <li>Fixed Issue #27 \"@EqualsAndHashCode on final classes: Should not have a canEquals in that case.\"</li>\n      <li>Fixed Issue #28 \"Getters and setters should be generated even if the method exists with different parameter\n        count\"\n      </li>\n    </ol>\n  </li>\n  <li>0.4\n    <ol>\n      <li>fix reflection access for intellij ultimate</li>\n    </ol>\n  </li>\n  <li>0.3\n    <ol>\n      <li>Fixed issue #4 \"Getter/Setter on generic types\"</li>\n      <li>Fixed issue #6 \"The Plugin panel in IDEA lists the plugin as \"Lombook Plugin (doubled letter 'o')\"</li>\n      <li>Fixed issue #7 \"Added support for IntelliJ 11\"</li>\n      <li>Fixed issue #9 \"@Data(staticConstructor=\"of\") is not created\"</li>\n      <li>Fixed issue #10 \"Empty constructor is created even if it already exists\"</li>\n      <li>Fixed issue #15 \"@Data with @NoArgsConstructor does not generate default constructor\"</li>\n      <li>Fixed issue #17 \"Incompatibility with javax.annotation.Nonnull/Nullable\"</li>\n      <li>Added more inspections and QuickFixes for some of lombok annotations.</li>\n      <li>Fixed: skip constructor generation for @Data if some constructor is already defined in the class</li>\n      <li>Fixed: skip getter generation for invalid lazy-getters</li>\n      <li>Added support for \"LazyGetter\" and \"FluentSetter\" annotations from lombok-pg</li>\n    </ol>\n  </li>\n  <li>0.2\n    <ol>\n      <li>Added inspections for lombok annotations.</li>\n      <li>Added some simple QuickFixes for lombok inspections.</li>\n      <li>Fixed bug with not working auto-completion in the same source file with lombok annotations that generate\n        methods.\n      </li>\n      <li>Better support of lombok annotations, especially for 'staticName','types' and 'excludes' properties of\n        @Delegate and @XXXConstructor\n      </li>\n      <li>General bug fixing and many improvements</li>\n    </ol>\n  </li>\n  <li>0.1\n    <ol>\n      <li>Initial Release for IDEA &gt;= 10.0</li>\n    </ol>\n  </li>\n</ul>\n","dependencies":["com.intellij.modules.platform","com.intellij.modules.lang","com.intellij.modules.java"],"since":"201.6668","until":"201.*","sourceCodeUrl":"https://github.com/mplushnikov/lombok-intellij-plugin/archive/master.zip"}